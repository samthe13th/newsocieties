{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/announcement/announcement.component.ts","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/components/components.module.ts","./src/app/components/dialog/dialog.component.ts","./src/app/components/harvest/harvest.component.ts","./src/app/components/harvest/harvest.component.html","./src/app/components/land-grid/land-grid.component.ts","./src/app/components/land-grid/land-grid.component.html","./src/app/components/player-deck/player-deck.component.ts","./src/app/components/player-deck/player-deck.component.html","./src/app/components/player-hands/player-hands.component.ts","./src/app/components/scorecard/scorecard.component.ts","./src/app/components/society-summary/society-summary.component.ts","./src/app/components/society-summary/society-summary.component.html","./src/app/components/vote/vote.component.ts","./src/app/interfaces.ts","./src/app/pages/central/central.component.ts","./src/app/pages/central/central.component.html","./src/app/pages/central/templates.ts","./src/app/pages/host/host.component.ts","./src/app/pages/host/host.component.html","./src/app/pages/pages.module.ts","./src/app/pages/player/player.component.ts","./src/app/pages/player/player.component.html","./src/app/utilties.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PlayerComponent } from './pages/player/player.component'\nimport { CentralComponent } from './pages/central/central.component';\nimport { HostComponent } from './pages/host/host.component';\n\nconst routes: Routes = [\n  { path: ':show/:division/:id', component: PlayerComponent },\n  { path: ':show/:division', component: HostComponent },\n  { path: '', component: CentralComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'new-societies';\n}\n","<router-outlet></router-outlet>","import { AngularFireModule } from '@angular/fire';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ComponentsModule } from './components/components.module';\nimport { environment } from '../environments/environment';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgModule } from '@angular/core';\nimport { PagesModule } from './pages/pages.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ComponentsModule,\n    FontAwesomeModule,\n    PagesModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-announcement',\n  templateUrl: './announcement.component.html',\n  styleUrls: ['./announcement.component.scss'],\n  host: {\n    '[class.announcement]': 'true'\n  }\n})\nexport class AnnouncementComponent {\n\n}","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\nexport type CardSide = 'front' | 'back';\n\n@Component({\n  selector: 'card',\n  templateUrl: 'card.component.html',\n  styleUrls: ['card.component.scss'],\n  host: {\n    '[class.card]': 'true',\n    '[class.animate]': 'animate',\n    '[style.width.px]': 'width',\n    '[style.height.px]': 'height',\n    '[class.mark]': 'mark !== null && mark !== undefined',\n    '[attr.data-mark]': 'mark !== playerId ? mark : undefined'\n  }\n})\nexport class CardComponent implements OnInit {\n  private _side: CardSide;\n\n  animate = false;\n\n  @Output() sideChange: EventEmitter<CardSide> = new EventEmitter<CardSide>();\n\n  @Input() mark = null\n  @Input() xray = false;\n  @Input() playerId;\n  @Input() \n  set side(val) {\n    if (this._side && this.animate === false && val !== this._side) {\n      this.animate = true;\n    }\n    this._side = val;\n    if (this.animate) {\n      this.sideChange.emit(val);\n    }\n  }\n  get side() { return this._side }\n  @Input() width: number = 50;\n  @Input() height: number = 100;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.side = this.side ?? 'front';\n  }\n}\n","<div \n  class=\"face back\"\n  [class.up]=\"side == 'back'\"\n  [class.down]=\"side == 'front'\">\n  <ng-content select=[back]></ng-content>\n</div>\n<div \n  class=\"face front\"\n  [class.up]=\"side == 'front'\"\n  [class.down]=\"side == 'back'\">\n  <ng-content select=[front]></ng-content>\n</div>","import { NgModule } from '@angular/core';\nimport { AnnouncementComponent } from './announcement/announcement.component';\nimport { CardComponent } from './card/card.component';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { HarvestComponent } from './harvest/harvest.component';\nimport { PlayerHandsComponent } from './player-hands/player-hands.component';\nimport { ScorecardComponent } from './scorecard/scorecard.component';\nimport { SocietySummaryComponent } from './society-summary/society-summary.component';\nimport { VoteComponent } from './vote/vote.component';\nimport { CommonModule } from '@angular/common';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { PlayerDeckComponent } from './player-deck/player-deck.component';\nimport { LandGridComponent } from './land-grid/land-grid.component';\n\nconst components = [\n  AnnouncementComponent,\n  CardComponent,\n  DialogComponent,\n  HarvestComponent,\n  LandGridComponent,\n  PlayerHandsComponent,\n  PlayerDeckComponent,\n  ScorecardComponent,\n  SocietySummaryComponent,\n  VoteComponent\n]\n\nconst ngMaterial = [\n  MatBottomSheetModule\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    ...ngMaterial\n  ],\n  declarations: [\n    ...components\n  ],\n  exports: [\n    ...components\n  ]\n})\nexport class ComponentsModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n  host: {\n    '[class.dialog]': 'true'\n  }\n})\nexport class DialogComponent {\n\n}","import { Output, Component, OnInit, HostListener, Input, EventEmitter } from '@angular/core';\nimport { range, chunk, includes, difference } from 'lodash';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { faEye, faShoppingBag } from '@fortawesome/free-solid-svg-icons';\nimport { getRandomInt, shuffle } from 'src/app/utilties';\nimport { LandTile, LandCardValues } from 'src/app/interfaces';\n\ntype LandGrid = Array<LandTile[]>;\n\nconst MAX_HARVEST = 49;\nconst KEY_CODE = {\n  e: 69,\n  g: 71\n}\n\n@Component({\n  selector: 'app-harvest',\n  templateUrl: './harvest.component.html',\n  styleUrls: ['./harvest.component.scss'],\n  host: {\n    '[class.harvest]': 'true'\n  }\n})\nexport class HarvestComponent implements OnInit {\n  landGrid: LandGrid = [];\n  landSelectSheet;\n  selectedResourceStatus;\n\n  // ICONS\n  exploreIcon = faEye;\n  gatherIcon = faShoppingBag;\n  \n  private destroy$ = new Subject<boolean>();\n  private landTiles: Array<LandTile> = [];\n  private selectedCardCoords: [number, number] | undefined;\n\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    const [r, i] = this.selectedCardCoords;\n    if(event.keyCode === KEY_CODE.e){\n      this.explore();\n    } else if (event.keyCode === KEY_CODE.g) {\n      this.gather(); \n    }\n  }\n\n  @Output() gatherResource: EventEmitter<{ value: number }> = new EventEmitter();\n\n  @Input() player: string;\n\n  @Input() division: string;\n\n  constructor(\n    private _bottomSheet: MatBottomSheet\n    ) {\n    this.landGrid = shuffle(this.landGrid);\n  }\n\n  ngOnInit() {\n    const slots = range(MAX_HARVEST);\n    this.landTiles = slots.map(() => ({ \n      value: getRandomInt(1, 3), \n      owner: this.getOwner(), \n      side: 'back', \n      contaminated: false,\n      mark: null\n     }))\n     this.newHarvest();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n\n  getResourceStatus() {\n    const card = this.getSelectedCard();\n    if (!card) {\n      return\n    }\n    if (card.side === 'back') {\n      return {\n        status: 'explorable'\n      }\n    } else if (card.value == 0) {\n      return {\n        status: 'contaminated',\n        message: 'This land is contaminated'\n      }\n    } else if (card.owner) {\n      const ownedBy = card.owner.division == card.owner.name\n        ? 'a member of the ' + card.owner.division + ' division'\n        : 'player ' + card.owner.name\n      return {\n        status: 'owned',\n        message: 'This land is owned by ' + ownedBy\n      }\n    }\n    return {\n      status: 'explored',\n    }\n  }\n\n  getSelectedCard() {\n    if (this.selectedCardCoords) {\n      const [r, i] = this.selectedCardCoords;\n      return this.landGrid[r][i];\n    }\n    return null;\n  }\n\n  newHarvest() {\n    this.landGrid = this.generateHarvest(13, 2);\n    setTimeout(() => {\n      this.gatherOwnedLand();\n    }, 500)\n  }\n\n  getOwner() {\n    const owned = getRandomInt(0,3) == 0;\n    const div = getRandomInt(0,1) == 0 ? 'NE' : 'W';\n\n    return owned ? {\n      name: div,\n      division: div\n    } : null\n  }\n\n  resetLandTiles() {\n    this.landTiles = <LandTile[]>[ \n      ...this.landTiles.map((tile: LandTile) => ({\n        ...tile,\n        side: 'back',\n        value: getRandomInt(1, 3), \n        contaminated: false,\n        mark: null\n    }))]\n  }\n\n  generateHarvest(totalCards, totalContaminents): LandGrid {\n    // Start with a range of integers\n    const slots = range(MAX_HARVEST);\n    this.resetLandTiles();\n\n    // Generate indexes for removing tiles\n    const removals = this.pluck(slots, MAX_HARVEST - totalCards)\n    removals.forEach((i) => {\n      this.landTiles[i].value = LandCardValues.EMPTY;\n    })\n\n    // Generate harvest (selectable card tiles)\n    const harvest = difference(slots, removals);\n\n    // Add contaminants\n    const contaminents = this.pluck(harvest, totalContaminents);\n    contaminents.forEach((i) => {\n      this.landTiles[i].value = LandCardValues.CONTAM;\n    })\n\n    // Build matrix (2D array)\n    return chunk(this.landTiles, 7);\n  }\n\n  gatherOwnedLand() {\n    this.landGrid.forEach(((row, r) => {\n      row.forEach((card, i) => {\n        if (card.owner) {\n          card.side = 'front';\n          this.process(r, i);\n        }\n      })\n    }))\n  }\n\n  pluck(array, remove) {\n    const toRemove = [];\n    while(toRemove.length < remove) {\n      const value = array[getRandomInt(0, array.length - 1)];\n      if (!includes(toRemove, value)) {\n        toRemove.push(value)\n      }\n    }\n    return toRemove;\n  }\n\n  selectTile(r, i, sheetTemplate) {\n    this.mark(r, i);\n    this.landSelectSheet = this._bottomSheet.open(sheetTemplate);\n    this.selectedResourceStatus = this.getResourceStatus();\n    this.landSelectSheet.afterDismissed().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      if (this.selectedCardCoords) {\n        this.clearSelection();\n      }\n    })\n  }\n\n  clearSelection() {\n    const [r, i] = this.selectedCardCoords;\n    this.landGrid[r][i].mark = null;\n    this.selectedCardCoords = null;\n  }\n\n  mark(r, i) {\n    if (this.selectedCardCoords) {\n      this.clearSelection();\n    }\n    const card = this.landGrid[r][i];\n    card.mark = card.mark ? null : 1;\n    this.selectedCardCoords = [r,i];\n  }\n\n  explore() {\n    if (this.selectedCardCoords) {\n      const [r, i] = this.selectedCardCoords;\n      const card = this.landGrid[r][i];\n      if (card.side === 'back' && card.value !== -1) {\n        this.landGrid[r][i].side = 'front';\n      }\n      if (this.landSelectSheet) {\n        this.landSelectSheet.dismiss();\n      }\n      this.clearSelection();\n    }\n  }\n\n  gather() {\n    if (this.selectedCardCoords && this.selectedResourceStatus) {\n      const status = this.selectedResourceStatus.status;\n      if (status === 'explorable' || status === 'explored') {\n        console.log('do gather')\n        const [r, i] = this.selectedCardCoords;\n        const card = this.landGrid[r][i];\n        this.gatherResource.emit({ value: card.value });\n        this.landGrid[r][i].value = -1;\n      }\n      if (this.landSelectSheet) {\n        this.landSelectSheet.dismiss();\n      }\n      this.clearSelection();\n    }\n  }\n\n  process(r, i) {\n    // A card value of 0 signifies a contaminant\n    if (this.landGrid[r][i].value === LandCardValues.CONTAM) {\n      const left = this.landGrid[r]?.[i - 1];\n      const right = this.landGrid[r]?.[i + 1];\n      const top = this.landGrid[r - 1]?.[i];\n      const bottom = this.landGrid[r + 1]?.[i];\n\n      setTimeout(() => {\n        if (left && !left.owner) { left.contaminated = true }\n        if (right && !right.owner) { right.contaminated = true }\n        if (top && !top.owner) { top.contaminated = true }\n        if (bottom && !bottom.owner) { bottom.contaminated = true }\n      })\n    }\n  }\n}\n","<div class=\"harvest-cards\">\n  <div *ngFor=\"let row of landGrid; let r = index\" class=\"card-row\">\n    <div \n      *ngFor=\"let card of row; let i = index\"\n      class=\"land-tile\"\n      [class.contaminated]=\"card.contaminated == true\"\n      [attr.data-badge]=\"card.owner ? card.owner.name : null\"\n      [attr.data-division]=\"card.owner ? card.owner.division : null\"\n      [class.empty]=\"card.value === -1\"\n      [class.owned]=\"card.owner !== null\"\n    >\n      <card\n        (click)=\"selectTile(r, i, tileSelectSheet)\"\n        [(side)]=\"card.side\"\n        width=\"40\"\n        height=\"40\"\n        [class.owned]=\"true\"\n        [mark]=\"card.mark\"\n        [class.disabled]=\"card.value == -1 || card.contaminated == true\"\n        (sideChange)=\"process(r, i)\">\n\n        <div front class=\"harvest-card\">\n          <div \n            *ngIf=\"card.value > 0\"\n            class=\"resource\" \n            [class.one]=\"card.value === 1\"\n            [class.two]=\"card.value === 2\"\n            [class.three]=\"card.value === 3\">\n            {{card.value}}\n          </div>\n          <div *ngIf=\"card.value === 0\" class=\"contamination\">\n            <img src=\"../assets/contamination.png\"/>\n          </div>\n        </div>\n        <div back class=\"harvest-card back\"></div>\n      </card>\n    </div>\n  </div>\n</div>\n<button (click)=\"newHarvest()\">New</button>\n\n<ng-template #tileSelectSheet>\n  <div class=\"action-sheet\">\n    {{ selectedResourceStatus?.message }}\n    <div \n      *ngIf=\"selectedResourceStatus?.status === 'explorable'\" \n      class=\"large-action-button\"\n      (click)=\"explore()\">\n      <fa-icon size=\"lg\" [icon]=\"exploreIcon\"></fa-icon>\n      Explore (e)\n    </div>\n    <div \n      *ngIf=\"selectedResourceStatus?.status === 'explored' || selectedResourceStatus?.status === 'explorable'\"\n      class=\"large-action-button\"\n      (click)=\"gather()\">\n      <fa-icon size=\"lg\" [icon]=\"gatherIcon\"></fa-icon>\n      Gather (g)\n    </div>\n  </div>\n</ng-template>","import { Output, Component, OnInit, Input, EventEmitter } from '@angular/core';\nimport { range, chunk, isEqual, isEmpty } from 'lodash';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Subject } from 'rxjs';\nimport { LandCardValues, LandTile } from 'src/app/interfaces';\n\nconst MAX_HARVEST = 49;\nconst HARVEST_ROW_LENGTH = 7;\n\n@Component({\n  selector: 'app-land-grid',\n  templateUrl: './land-grid.component.html',\n  styleUrls: ['./land-grid.component.scss'],\n  host: {\n    '[class.harvest]': 'true'\n  }\n})\nexport class LandGridComponent implements OnInit {\n  landTiles;\n  animateTiles;\n\n  landSelectSheet;\n  selectedResourceStatus;\n  selectedCardIndex;\n  \n  private destroy$ = new Subject<boolean>();\n\n  @Output() gatherResource: EventEmitter<{ value: number }> = new EventEmitter();\n  @Output() select: EventEmitter<LandTile> = new EventEmitter();\n\n  @Input() markCards: boolean;\n  @Input() updatePath;\n  @Input() showId;\n  @Input() playerId = 0;\n\n  constructor(\n    private db: AngularFireDatabase,\n    private _bottomSheet: MatBottomSheet\n  ) {}\n\n  ngOnInit() {\n    this.db.object(this.updatePath)\n      .valueChanges()\n      .subscribe((tiles: any[]) => {\n        if (!this.landTiles) {\n          this.landTiles = tiles;\n        }\n        tiles.forEach((update, i) => {\n          if (!isEqual(update, this.landTiles[i])) {\n            console.log('update: ', update)\n            const tile = this.landTiles[i];\n            tile.harvested = update.harvested;\n            tile.value = update.value;\n            tile.contaminated = update.contaminated;\n            tile.mark = update.mark ?? null;\n            tile.owner = update.owner ?? null;\n          }\n        })\n      })\n\n    this.db.object(`shows/${this.showId}/contamination/current`)\n      .valueChanges()\n      .subscribe((level) => {\n        console.log('adjust contam: ', level)\n        //this.adjustContamination(level);\n      })\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n\n  cardUpdates(tiles) {\n    tiles.forEach((tile, i) => {\n      if (isEqual(tile, this.landTiles[i])) {\n        this.landTiles[i] = { ...tile };\n      }\n    })\n  }\n\n  getSelectedCard() {\n    return this.landTiles?.[this.selectedCardIndex] ?? null;\n  }\n\n  gatherOwnedLand() {\n    this.landTiles.forEach((card, i) => {\n      if (card.owner) {\n        card.harvested = false;\n        this.process(i);\n      }\n    })\n  }\n\n  selectTile(card) {\n    console.log('select: ', card, isEmpty(card.mark))\n    if (!card.mark || card.mark === this.playerId) {\n      this.select.emit(card);\n      this.mark(card);\n    }\n  }\n\n  clearSelection(index) {\n    this.landTiles[index].mark = null;\n    this.selectedCardIndex = null;\n    this.updateDB();\n  }\n\n  mark(_card) {\n    if (this.selectedCardIndex) {\n      this.clearSelection(this.selectedCardIndex);\n    }\n    const card = this.landTiles[_card.index];\n    card.mark = card.mark ? null : this.playerId;\n    this.selectedCardIndex = card.index;\n    this.updateDB();\n  }\n\n  explore(card) {\n    console.log('explore: ', card);\n    if (!card.harvested && card.value !== LandCardValues.EMPTY) {\n      this.landTiles[card.index].harvested = true;\n      console.log('updates: ', this.landTiles);\n      this.updateDB();\n    }\n    this.clearSelection(card.index);\n  }\n\n  gather(card) {\n    console.log('do gather')\n    this.gatherResource.emit({ value: card.value });\n    this.landTiles[card.index].value = -1;\n    this.updateDB();\n    this.clearSelection(card.index);\n  }\n\n  updateDB() {\n    this.db.object(this.updatePath).update(this.landTiles);\n  }\n\n  getRelativeGridIndex(index, dir, dist) {\n    const grid = chunk(range(MAX_HARVEST), HARVEST_ROW_LENGTH);\n    const r = Math.floor(index / HARVEST_ROW_LENGTH);\n    const c = index % HARVEST_ROW_LENGTH;\n    \n    if (dir === 'left') { return grid[r]?.[c - dist] }\n    if (dir === 'right') { return grid[r]?.[c + dist] }\n    if (dir === 'top') { return grid[r - dist]?.[c] }\n    if (dir === 'bottom') { return grid[r + dist]?.[c] }\n  }\n\n  process(i) {\n    const tile = this.landTiles[i];\n    if (tile.value === LandCardValues.CONTAM && tile.harvested) {\n      const left = this.landTiles[this.getRelativeGridIndex(i, 'left', 1)];\n      const right = this.landTiles[this.getRelativeGridIndex(i, 'right', 1)];\n      const top = this.landTiles[this.getRelativeGridIndex(i, 'top', 1)];\n      const bottom = this.landTiles[this.getRelativeGridIndex(i, 'bottom', 1)];\n\n      setTimeout(() => {\n        if (left && !left.owner) { left.contaminated = true }\n        if (right && !right.owner) { right.contaminated = true }\n        if (top && !top.owner) { top.contaminated = true }\n        if (bottom && !bottom.owner) { bottom.contaminated = true }\n        this.updateDB();\n      })\n    }\n  }\n}\n","<div class=\"harvest-cards\">\n  <div \n    *ngFor=\"let card of landTiles; let i = index\"\n    class=\"land-tile\"\n    [class.contaminated]=\"card.contaminated == true\"\n    [attr.data-badge]=\"card.owner ? card.owner.name : null\"\n    [attr.data-division]=\"card.owner ? card.owner.division : null\"\n    [class.empty]=\"card.value === -1\"\n    [class.owned]=\"card.owner !== null\"\n  >\n    <card\n      (click)=\"selectTile(card)\"\n      [side]=\"card.harvested ? 'front' : 'back'\"\n      width=\"40\"\n      height=\"40\"\n      [class.owned]=\"true\"\n      [mark]=\"card.mark\"\n      [playerId]=\"playerId\"\n      [class.disabled]=\"card.value == -1 || card.contaminated == true\"\n      (sideChange)=\"process(i)\">\n      <div front class=\"harvest-card\">\n        <div \n          *ngIf=\"card.value > 0\"\n          class=\"resource\" \n          [class.one]=\"card.value === 1\"\n          [class.two]=\"card.value === 2\"\n          [class.three]=\"card.value === 3\">\n          {{card.value}}\n        </div>\n        <div *ngIf=\"card.value === 0\" class=\"contamination\">\n          <img src=\"../assets/contamination.png\"/>\n        </div>\n      </div>\n      <div back class=\"harvest-card back\">\n        <div class=\"flex-row flex-center\" *ngIf=\"markCards\">\n          {{card.value == 0 ? 'X' : ''}}\n        </div>\n      </div>\n    </card>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { slice } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { LandCardValues } from 'src/app/interfaces';\n\n@Component({\n  selector: 'app-player-deck',\n  templateUrl: './player-deck.component.html',\n  styleUrls: ['./player-deck.component.scss'],\n  host: {\n    '[class.player-deck]': 'true'\n  }\n})\nexport class PlayerDeckComponent {\n  $GLAResources: Observable<any>;\n\n  private _resources = [\n    { value: 1 }, { value: 3 }, { value: 2 },\n    { value: 1 }, { value: 3 }, { value: 2 },\n    { value: 1 }, { value: 3 }, { value: 2 },\n  ];\n  private _achievements: {\n    safety: [],\n    health: [],\n    arts: [],\n    knowledge: [],\n    infastructure: []\n  }\n  wealth = 0;\n\n  @Input() id;\n  @Input() division;\n\n  ngOnInit() {\n    // this.resources = sortBy(this.resources, 'value');\n    this.calculateWealth()\n  }\n\n  get resources() { return this._resources }\n  set resources(value) {\n    this._resources = value;\n  }\n\n  public add(R) {\n    if (R.value === LandCardValues.CONTAM) {\n      this.contaminateResources()\n    } else {\n      this._resources.push(R);\n      this.wealth += R.value;\n      // this.resources = sortBy(this.resources, 'value')\n    }\n  }\n\n  public remove(id) {\n    console.log('remove resource: ', id)\n  }\n\n  public spend(cost) {\n    if (cost > this.wealth) {\n      window.alert(\"Sorry, you can't afford that :(\")\n    } else {\n      const change = this.spendResources(cost)\n    }\n  }\n\n  private spendResources(cost) {\n    let spend = 0;\n    let transactions = 0;\n    const maxTransactions = this.resources.length;\n\n    while (spend < cost && transactions <= maxTransactions) {\n      spend += this.resources[0].value;\n      this.resources.shift();\n      transactions++;\n    }\n\n    if (cost > spend) {\n      alert('TRANSACTION DECLINED')\n    } else {\n      const change = spend - cost;\n\n      if (change > 0) {\n        this.resources.push({ value: change });\n      }\n  \n      this.calculateWealth();\n  \n      console.log('SPENT: ', spend, 'CHANGE: ', change)\n    }\n  }\n\n  private calculateWealth() {\n    this.wealth = this.resources.reduce((acc, R) => acc + R.value, 0);\n  }\n\n  private contaminateResources() {\n    const toDestroy = Math.ceil(this.resources.length / 2);\n    const destroyMsg = toDestroy > 0 \n      ? ` ${formatPlural(toDestroy, 'resource has', 'resources have')} been destroyed`\n      : ''\n\n    this.resources = slice(this.resources, toDestroy)\n    this.calculateWealth();\n\n    window.alert(`You gathered a contaminant!${destroyMsg}`);\n  }\n}\n\nfunction formatPlural(num, singular, plural) {\n  return num == 1 ? `${num} ${singular}` : `${num} ${plural}`;\n}","PLAYER: {{id}} | WEALTH: {{wealth}}\n<div class=\"flex-row\">\n  <div class=\"flex-column\">\n    Harvested\n    <div class=\"player-hand\">\n      <div \n        class=\"resource\" \n        [class.one]=\"resource.value == 1\"\n        [class.two]=\"resource.value == 2\"\n        [class.three]=\"resource.value == 3\"\n        *ngFor=\"let resource of resources\">\n        {{resource.value}}\n      </div>\n    </div>\n  </div>\n  <div class=\"flex-column\">\n    GLA\n    <div class=\"gla-resources\">\n      <div \n        class=\"resource\" \n        [class.one]=\"resource.value == 1\"\n        [class.two]=\"resource.value == 2\"\n        [class.three]=\"resource.value == 3\"\n        *ngFor=\"let resource of ($GLAResources | async)\">\n        {{resource.value}}\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-player-hands',\n  templateUrl: './player-hands.component.html',\n  styleUrls: ['./player-hands.component.scss'],\n  host: {\n    '[class.player-hands]': 'true'\n  }\n})\nexport class PlayerHandsComponent {\n  private _hand = [];\n  private _score: number = 0;\n\n  @Input() players;\n  @Input() focus;\n\n  get hand() { return this._hand }\n  set hand(value) {\n    this._hand = value;\n  }\n\n  public add(card) {\n    this._hand.push(card);\n    console.log(\"add card: \", card, this.hand);\n  }\n\n  public remove(id) {\n    console.log('remove card: ', id)\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-scorecard',\n  templateUrl: './scorecard.component.html',\n  styleUrls: ['./scorecard.component.scss'],\n  host: {\n    '[class.scorecard]': 'true'\n  }\n})\nexport class ScorecardComponent {\n\n}","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-society-summary',\n  templateUrl: './society-summary.component.html',\n  styleUrls: ['./society-summary.component.scss'],\n  host: {\n    '[class.society-summary]': 'true',\n    '[class.flex-column]': 'true'\n  }\n})\nexport class SocietySummaryComponent {\n  @Input() division;\n  @Input() details: 'full' | 'brief';\n\n  calculateReserve(reserve) {\n    return reserve.reduce((acc, R) => acc + R, 0)\n  }\n}","<ng-container *ngIf=\"division\">\n  <strong>Division: {{ division?.code }}</strong>\n  <div><strong>Season:</strong>{{ division.season }}</div>\n  <div><strong>Score:</strong>{{ division.score }}</div>\n  <div><strong>Land cost:</strong>{{ division.landCost }}</div>\n  <ng-container *ngIf=\"details === 'full'\">\n    <div><strong>Reserve:</strong>{{ calculateReserve(division.reserve) }}</div>\n    <div><strong>Harvested (actual):</strong>{{ division.harvested }}</div>\n    <div><strong>Capacity:</strong>{{ division.capacity }}+{{ division.extra }}</div>\n    <div><strong>Harvest:</strong>{{ division.harvest }}</div>\n  </ng-container>\n</ng-container>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-vote',\n  templateUrl: './vote.component.html',\n  styleUrls: ['./vote.component.scss'],\n  host: {\n    '[class.vote]': 'true'\n  }\n})\nexport class VoteComponent {\n\n}","export interface LandTile {\n  value: number;\n  owner: LandOwner, \n  side?: 'back' | 'front';\n  harvested?: boolean;\n  contaminated: boolean;\n  mark: string | number | null;\n}\n\nexport interface LandOwner {\n  name: string;\n  division: string;\n}\n\nexport enum LandCardValues {\n  EMPTY = -1,\n  CONTAM = 0,\n  V1 = 1,\n  V2 = 2,\n  V3 = 3\n}\n\nexport type LandCardValue = LandCardValues | keyof typeof LandCardValues;\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { take } from 'rxjs/operators';\nimport { toArray, range } from 'lodash';\nimport { DIVISION_TEMPLATE, SHOW_TEMPLATE } from './templates';\n\nconst DIVISIONS = ['N', 'S', 'E', 'W', 'NE', 'SE', 'SW', 'NW']\nconst MAX_HARVEST = 49;\n\n@Component({\n  selector: 'app-central',\n  templateUrl: './central.component.html',\n  styleUrls: ['./central.component.scss']\n})\nexport class CentralComponent implements OnInit {\n  showKey: string;\n  divisionChanges;\n\n  constructor(private db: AngularFireDatabase) {}\n\n  ngOnInit() {\n    this.db.list('shows', ref => ref.limitToLast(1))\n      .snapshotChanges()\n      .pipe(take(1))\n      .subscribe(([snapshot]) => {\n        this.showKey = snapshot.key\n        this.createDivisionListeners(snapshot.payload.val())\n      })\n  }\n\n  createDivisionListeners(show) {\n    if (show?.divisions) {\n      this.divisionChanges = toArray(show.divisions).map(division => {\n        return this.db.object(`shows/${this.showKey}/divisions/${division.code}`).valueChanges();\n      })\n    }\n  }\n\n  newShow() {\n    const divisions = this.generateDivisions();\n    this.db.list('shows').push({ divisions, ...SHOW_TEMPLATE })\n      .then((res) => { this.buildShow(res.key) })\n  }\n\n  buildShow(key) {\n    this.db.object(`shows/${key}`).valueChanges()\n      .pipe(take(1))\n      .subscribe((show) => {\n        this.showKey = key;\n        this.createDivisionListeners(show);\n      })\n  }\n\n  generateDivisions() {\n    return DIVISIONS.reduce((acc, abv) => {\n      return { ...acc, [abv]: { \n        code: abv, \n        landTiles: this.generateLandTiles(),\n        ...DIVISION_TEMPLATE\n      } }\n    }, {});\n  }\n\n  generateLandTiles() {\n    const slots = range(MAX_HARVEST);\n    return slots.map((_, index) => ({ \n      value: -1, \n      owner: null, \n      harvested: false, \n      contaminated: false,\n      mark: null, \n      index\n     }))\n  }\n}\n","<button (click)=\"newShow()\">New Show</button>\n<div class=\"division-summary\" *ngFor=\"let $division of divisionChanges\">\n  localhost:4200/{{showKey}}/{{ ($division | async)?.code }}/X\n  <app-society-summary\n    details=\"full\"\n    [division]=\"$division | async\">\n  </app-society-summary>\n</div>","export const DIVISION_TEMPLATE = {\n  achievements: {\n    safety: {\n     accomplishedBy: null,\n     reward: 'Exploring a contamination will not affect the harvest line.'\n    },\n    health: {\n      accomplishedBy: null,\n      reward: 'Gathering a contamination will not affect your hand.'\n    },\n    arts: {\n      accomplishedBy: null,\n      reward: 'The effect is immeasurable.'\n    },\n    knowledge: {\n      accomplishedBy: null,\n      reward: 'Peek at one resource on the harvest line without exploring.'\n    },\n    infastructure: {\n      accomplishedBy: null,\n      reward: '+1 action.'\n    }\n  },\n  imports: {\n    messages: [],\n    gla: [],\n    resources: [],\n    players: []\n  },\n  exports: {\n    messages: [],\n    gla: [],\n    resources: [],\n    players: []\n  },\n  landCost: 5,\n  VP: 0,\n  score: 'Low',\n  principles: [],\n  resolutions: [],\n  season: 1,\n  messages: [],\n  incomingAnnouncement: null,\n  announcements: [],\n  reserve: [1, 2, 3, 2],\n  reserveThresholds: {\n    low: 7, \n    mid: 12,\n    hight: 17\n  },\n  capacity: 18,\n  extra: 8,\n  harvest: 25,\n  harvested: 20,\n  land: [],\n  citizens: []\n}\n\nexport const SHOW_TEMPLATE = {\n  clock: 0,\n  live: false,\n  contamination: {\n    min: 5,\n    max: 100,\n    current: 5,\n    formula: 'linear'\n  },\n  newsFeed: [],\n  content: {},\n  gla: {\n    actual: 0,\n    capacity: 0\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { getRandomInt, pluckRandom } from 'src/app/utilties';\nimport { LandTile, LandCardValues } from 'src/app/interfaces';\nimport { includes, range, difference } from 'lodash';\n\n@Component({\n  selector: 'app-host',\n  templateUrl: './host.component.html',\n  styleUrls: ['./host.component.scss']\n})\nexport class HostComponent implements OnInit {\n  division;\n  contamination;\n  harvest;\n\n  divisionId;\n  showId;\n  divisionPath;\n  landTilesPath;\n\n  constructor(\n    private db: AngularFireDatabase,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.divisionId = this.route.snapshot.params.division;\n    this.showId = this.route.snapshot.params.show;\n    this.divisionPath = `shows/${this.showId}/divisions/${this.divisionId}`;\n    \n    this.landTilesPath = `${this.divisionPath}/landTiles`\n\n    this.db.object(this.divisionPath)\n      .valueChanges()\n      .subscribe((division) => {\n        this.division = division\n      })\n\n    this.db.object(`shows/${this.showId}/contamination/current`)\n      .valueChanges()\n      .subscribe((level) => {\n        this.adjustContamination(level);\n      })\n  }\n\n  newSeason() {\n    const { landTiles, harvest } = this.division;\n    this.harvest = this.generateHarvest(landTiles, harvest);\n    this.db.object(`${this.divisionPath}/landTiles`).set({ ...this.harvest })\n    console.log('NEW HARVEST: ', this.harvest)\n  }\n\n  private adjustContamination(level) {\n    console.log('adjust contam')\n    this.contamination = level;\n    if (this.harvest) {\n      const cardIndexes = this.harvest\n        .map((tile, index) => tile.value == LandCardValues.EMPTY ? -1 : index)\n        .filter(value => value !== -1);\n      const contaminantsCount = Math.ceil((this.contamination / 100) * cardIndexes.length)\n      const currentContaminantIndexes = this.harvest\n        .map((tile, index) => tile.value === LandCardValues.CONTAM ? index : -1)\n        .filter(value => value !== -1);\n      const adjustment = contaminantsCount - currentContaminantIndexes.length;\n\n      console.log({cardIndexes, contaminantsCount, current: currentContaminantIndexes.length, adjustment })\n      if (adjustment > 0) {\n        const contaminate = pluckRandom(\n          difference(cardIndexes, currentContaminantIndexes),\n          Math.min(adjustment, cardIndexes.length)\n        );\n        console.log('add contams: ', contaminate)\n        contaminate.forEach((i) => {\n          if (!this.harvest[i].harvested) {\n            this.harvest[i].value = LandCardValues.CONTAM;\n          }\n        })\n      } else if (adjustment < 0) {\n        const uncontaminate = pluckRandom(currentContaminantIndexes, Math.min(Math.abs(adjustment), currentContaminantIndexes.length));\n        console.log('Remove contams: ', uncontaminate)\n        uncontaminate.forEach((i) => {\n          if (!this.harvest[i].harvested) {\n            this.harvest[i].value = getRandomInt(1,3);\n          }\n        })\n      }\n    }\n  }\n\n  private generateHarvest(landTiles, harvestableCards): Array<LandTile> {\n    const tiles: LandTile[] = [ ...this.resetLandTiles(landTiles) ];\n    const harvest: number[] = pluckRandom(range(tiles.length), harvestableCards);\n    const contaminantsCount = Math.ceil((this.contamination / 100) * harvestableCards);\n    const contaminants: number[] = pluckRandom(harvest, contaminantsCount);\n\n    harvest.forEach((i) => {\n      tiles[i].value = includes(contaminants, i) ? 0 : getRandomInt(1,3)\n    })\n\n    return tiles;\n  }\n\n  private resetLandTiles(tiles) {\n    return tiles.map((tile) => ({\n      ...tile,\n      value: -1,\n      contaminated: false,\n      mark: null,\n      harvested: false\n    }))\n  }\n}\n","<span *ngIf=\"contamination !== undefined\">\n  Contamination Level: {{contamination}}%\n</span>\n<hr/>\n<app-society-summary\n  *ngIf=\"division\"\n  details=\"full\"\n  [division]=\"division\">\n</app-society-summary>\n<button (click)=\"newSeason()\">New Season</button>\n<app-land-grid \n  [markCards]=\"true\"\n  [showId]=\"showId\"\n  [updatePath]=\"landTilesPath\">\n</app-land-grid>","import { NgModule } from '@angular/core';\nimport { HostComponent } from './host/host.component';\nimport { CentralComponent } from './central/central.component';\nimport { PlayerComponent } from './player/player.component';\nimport { ComponentsModule } from '../components/components.module';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nconst pages = [\n  CentralComponent,\n  HostComponent,\n  PlayerComponent\n]\n\n@NgModule({\n  imports: [\n    ComponentsModule,\n    FontAwesomeModule,\n    CommonModule,\n  ],\n  declarations: [\n    ...pages\n  ],\n  exports: [\n    ...pages\n  ]\n})\nexport class PagesModule { }\n","import { Component, ViewChild, OnInit, TemplateRef, HostListener } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { PlayerDeckComponent } from 'src/app/components/player-deck/player-deck.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { LandGridComponent } from 'src/app/components/land-grid/land-grid.component';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { LandCardValues } from 'src/app/interfaces';\nimport { faEye, faShoppingBag } from '@fortawesome/free-solid-svg-icons';\n\nconst KEY_CODE = {\n  e: 69,\n  g: 71\n}\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.scss']\n})\nexport class PlayerComponent implements OnInit {\n  @ViewChild(PlayerDeckComponent, { static: false }) playerDeck: PlayerDeckComponent;\n  @ViewChild(LandGridComponent, { static: false }) landGrid: LandGridComponent;\n  @ViewChild(TemplateRef, { static: false }) sheetTemplate: TemplateRef<any>;\n  \n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if(event.keyCode === KEY_CODE.e){\n      this.explore();\n    } else if (event.keyCode === KEY_CODE.g) {\n      this.gather(); \n    }\n  }\n\n  private destroy$ = new Subject<boolean>();\n\n  id;\n  division = 'N';\n  divisionData;\n  showId;\n  landTilesPath;\n  selectedResourceStatus;\n  actionSheet;\n  selectedCard;\n\n  // ICONS\n  exploreIcon = faEye;\n  gatherIcon = faShoppingBag;\n  \n  constructor(\n    private db: AngularFireDatabase,\n    private _bottomSheet: MatBottomSheet,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    const { show, division, id } = this.route.snapshot.params;\n    const showPath = `shows/${show}`;\n    this.showId = show;\n    this.id = id;\n    this.landTilesPath = `${showPath}/divisions/${division}/landTiles`\n  }\n\n  onGather(card) {\n    this.playerDeck.add(card);\n  }\n\n  onSelect(card) {\n    this.selectedCard = card;\n    this.actionSheet = this._bottomSheet.open(this.sheetTemplate);\n    this.selectedResourceStatus = this.getResourceStatus(card);\n    this.actionSheet.afterDismissed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        if (this.selectedCard) {\n          this.landGrid.clearSelection(this.selectedCard.index)\n        }\n      })\n  }\n\n  getResourceStatus(card) {\n    if (card === undefined) {\n      return\n    }\n    if (!card.harvested) {\n      return {\n        status: 'explorable'\n      }\n    } else if (card.value == LandCardValues.CONTAM) {\n      return {\n        status: 'contaminated',\n        message: 'This land is contaminated'\n      }\n    } else if (card.owner) {\n      const ownedBy = card.owner.division == card.owner.name\n        ? 'a member of the ' + card.owner.division + ' division'\n        : 'player ' + card.owner.name\n      return {\n        status: 'owned',\n        message: 'This land is owned by ' + ownedBy\n      }\n    }\n    return {\n      status: 'explored',\n    }\n  }\n\n  buy(item) {\n    this.playerDeck.spend(item.cost);\n  }\n\n  explore() {\n    console.log('explore');\n    this.landGrid.explore(this.selectedCard);\n    this.actionSheet.dismiss();\n  }\n\n  gather() {\n    const status = this.selectedResourceStatus?.status;\n    if (status === 'explorable' || status === 'explored') {\n      this.landGrid.gather(this.selectedCard)\n    }\n    this.actionSheet.dismiss();\n  }\n}\n","DIVISION: {{division}}\n\n<app-land-grid \n  #landGrid\n  [markCards]=\"false\"\n  [updatePath]=\"landTilesPath\"\n  [showId]=\"showId\"\n  [playerId]=\"id\"\n  (gatherResource)=\"onGather($event)\"\n  (select)=\"onSelect($event)\"\n>\n</app-land-grid>\n\n<app-player-deck [id]=\"id\" [division]=\"division\"></app-player-deck>\n\n<button (click)=\"buy({ cost: 2 })\">Spend $2</button>\n<button (click)=\"buy({ cost: 5 })\">Spend $5</button>\n<button (click)=\"buy({ cost: 6 })\">Spend $6</button>\n\n<ng-template #tileSelectSheet>\n  <div class=\"action-sheet\">\n    {{ selectedResourceStatus?.message }}\n    <div \n      *ngIf=\"selectedResourceStatus?.status === 'explorable'\" \n      class=\"large-action-button\"\n      (click)=\"explore()\">\n      <fa-icon size=\"lg\" [icon]=\"exploreIcon\"></fa-icon>\n      Explore (e)\n    </div>\n    <div \n      *ngIf=\"selectedResourceStatus?.status === 'explored' || selectedResourceStatus?.status === 'explorable'\"\n      class=\"large-action-button\"\n      (click)=\"gather()\">\n      <fa-icon size=\"lg\" [icon]=\"gatherIcon\"></fa-icon>\n      Gather (g)\n    </div>\n  </div>\n</ng-template>","import { includes } from 'lodash';\n\nexport function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function pluckRandom(array, total) {\n  const plucked = [];\n  if (total > array.length) {\n    console.error('pluck random: \"total\" cannot be greater than length of array to pluck from');\n    return array\n  }\n  while(plucked.length < total) {\n    const value = array[getRandomInt(0, array.length - 1)];\n    if (!includes(plucked, value)) {\n      plucked.push(value)\n    }\n  }\n  return plucked;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyAN_zOphtFT2At-ZHMYYacm-xmTSJvCyoU\",\n    authDomain: \"new-societies-8049d.firebaseapp.com\",\n    projectId: \"new-societies-8049d\",\n    storageBucket: \"new-societies-8049d.appspot.com\",\n    messagingSenderId: \"375668793661\",\n    appId: \"1:375668793661:web:0a818f374766b6e353e554\",\n    measurementId: \"G-2RV4B8YR29\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}