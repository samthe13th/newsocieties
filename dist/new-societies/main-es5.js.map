{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/announcement/announcement.component.ts","webpack:///src/app/components/card/card.component.ts","webpack:///src/app/components/card/card.component.html","webpack:///src/app/components/components.module.ts","webpack:///src/app/components/dialog/dialog.component.ts","webpack:///src/app/components/harvest/harvest.component.ts","webpack:///src/app/components/harvest/harvest.component.html","webpack:///src/app/components/land-grid/land-grid.component.ts","webpack:///src/app/components/land-grid/land-grid.component.html","webpack:///src/app/components/player-deck/player-deck.component.ts","webpack:///src/app/components/player-deck/player-deck.component.html","webpack:///src/app/components/player-hands/player-hands.component.ts","webpack:///src/app/components/scorecard/scorecard.component.ts","webpack:///src/app/components/society-summary/society-summary.component.ts","webpack:///src/app/components/society-summary/society-summary.component.html","webpack:///src/app/components/vote/vote.component.ts","webpack:///src/app/interfaces.ts","webpack:///src/app/pages/central/central.component.ts","webpack:///src/app/pages/central/central.component.html","webpack:///src/app/pages/central/templates.ts","webpack:///src/app/pages/host/host.component.ts","webpack:///src/app/pages/host/host.component.html","webpack:///src/app/pages/pages.module.ts","webpack:///src/app/pages/player/player.component.ts","webpack:///src/app/pages/player/player.component.html","webpack:///src/app/utilties.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","AnnouncementComponent","host","CardComponent","animate","sideChange","mark","xray","width","height","_side","val","emit","side","components","ngMaterial","ComponentsModule","DialogComponent","MAX_HARVEST","KEY_CODE","g","HarvestComponent","_bottomSheet","landGrid","exploreIcon","gatherIcon","destroy$","landTiles","gatherResource","event","selectedCardCoords","r","i","keyCode","explore","gather","slots","map","value","owner","getOwner","contaminated","newHarvest","next","card","getSelectedCard","status","message","ownedBy","division","name","generateHarvest","setTimeout","gatherOwnedLand","owned","div","tile","totalCards","totalContaminents","resetLandTiles","removals","pluck","forEach","EMPTY","harvest","contaminents","CONTAM","row","process","array","remove","toRemove","length","push","sheetTemplate","landSelectSheet","open","selectedResourceStatus","getResourceStatus","afterDismissed","pipe","subscribe","clearSelection","dismiss","console","log","left","right","top","bottom","HARVEST_ROW_LENGTH","LandGridComponent","db","select","playerId","object","updatePath","valueChanges","tiles","update","harvested","showId","level","selectedCardIndex","index","updateDB","_card","dir","dist","grid","Math","floor","c","getRelativeGridIndex","PlayerDeckComponent","_resources","wealth","calculateWealth","R","contaminateResources","cost","window","alert","change","spendResources","spend","transactions","maxTransactions","resources","shift","reduce","acc","toDestroy","ceil","destroyMsg","formatPlural","num","singular","plural","PlayerHandsComponent","_hand","_score","hand","ScorecardComponent","SocietySummaryComponent","reserve","VoteComponent","LandCardValues","DIVISIONS","CentralComponent","list","ref","limitToLast","snapshotChanges","snapshot","showKey","key","createDivisionListeners","payload","show","divisions","divisionChanges","generateDivisions","res","buildShow","abv","generateLandTiles","_","newShow","DIVISION_TEMPLATE","achievements","safety","accomplishedBy","reward","health","arts","knowledge","infastructure","messages","gla","players","landCost","VP","score","principles","resolutions","season","incomingAnnouncement","announcements","reserveThresholds","low","mid","hight","capacity","extra","land","citizens","SHOW_TEMPLATE","clock","live","contamination","min","max","current","formula","newsFeed","content","actual","HostComponent","route","divisionId","params","divisionPath","landTilesPath","adjustContamination","set","cardIndexes","filter","contaminantsCount","currentContaminantIndexes","adjustment","contaminate","uncontaminate","abs","harvestableCards","contaminants","newSeason","pages","PagesModule","PlayerComponent","showPath","playerDeck","add","selectedCard","actionSheet","undefined","item","onGather","onSelect","buy","shuffle","a","j","random","getRandomInt","pluckRandom","total","plucked","error","environment","production","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PlayerComponent } from './pages/player/player.component'\nimport { CentralComponent } from './pages/central/central.component';\nimport { HostComponent } from './pages/host/host.component';\n\nconst routes: Routes = [\n  { path: ':show/:division/:id', component: PlayerComponent },\n  { path: ':show/:division', component: HostComponent },\n  { path: '', component: CentralComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'new-societies';\n}\n","<router-outlet></router-outlet>","import { AngularFireModule } from '@angular/fire';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ComponentsModule } from './components/components.module';\nimport { environment } from '../environments/environment';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgModule } from '@angular/core';\nimport { PagesModule } from './pages/pages.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    AngularFireModule.initializeApp(environment.firebase),\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ComponentsModule,\n    FontAwesomeModule,\n    PagesModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-announcement',\n  templateUrl: './announcement.component.html',\n  styleUrls: ['./announcement.component.scss'],\n  host: {\n    '[class.announcement]': 'true'\n  }\n})\nexport class AnnouncementComponent {\n\n}","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\nexport type CardSide = 'front' | 'back';\n\n@Component({\n  selector: 'card',\n  templateUrl: 'card.component.html',\n  styleUrls: ['card.component.scss'],\n  host: {\n    '[class.card]': 'true',\n    '[class.animate]': 'animate',\n    '[style.width.px]': 'width',\n    '[style.height.px]': 'height',\n    '[class.mark]': 'mark !== null && mark !== undefined',\n    '[attr.data-mark]': 'mark !== playerId ? mark : undefined'\n  }\n})\nexport class CardComponent implements OnInit {\n  private _side: CardSide;\n\n  animate = false;\n\n  @Output() sideChange: EventEmitter<CardSide> = new EventEmitter<CardSide>();\n\n  @Input() mark = null\n  @Input() xray = false;\n  @Input() playerId;\n  @Input() \n  set side(val) {\n    if (this._side && this.animate === false && val !== this._side) {\n      this.animate = true;\n    }\n    this._side = val;\n    if (this.animate) {\n      this.sideChange.emit(val);\n    }\n  }\n  get side() { return this._side }\n  @Input() width: number = 50;\n  @Input() height: number = 100;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.side = this.side ?? 'front';\n  }\n}\n","<div \n  class=\"face back\"\n  [class.up]=\"side == 'back'\"\n  [class.down]=\"side == 'front'\">\n  <ng-content select=[back]></ng-content>\n</div>\n<div \n  class=\"face front\"\n  [class.up]=\"side == 'front'\"\n  [class.down]=\"side == 'back'\">\n  <ng-content select=[front]></ng-content>\n</div>","import { NgModule } from '@angular/core';\nimport { AnnouncementComponent } from './announcement/announcement.component';\nimport { CardComponent } from './card/card.component';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { HarvestComponent } from './harvest/harvest.component';\nimport { PlayerHandsComponent } from './player-hands/player-hands.component';\nimport { ScorecardComponent } from './scorecard/scorecard.component';\nimport { SocietySummaryComponent } from './society-summary/society-summary.component';\nimport { VoteComponent } from './vote/vote.component';\nimport { CommonModule } from '@angular/common';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { PlayerDeckComponent } from './player-deck/player-deck.component';\nimport { LandGridComponent } from './land-grid/land-grid.component';\n\nconst components = [\n  AnnouncementComponent,\n  CardComponent,\n  DialogComponent,\n  HarvestComponent,\n  LandGridComponent,\n  PlayerHandsComponent,\n  PlayerDeckComponent,\n  ScorecardComponent,\n  SocietySummaryComponent,\n  VoteComponent\n]\n\nconst ngMaterial = [\n  MatBottomSheetModule\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    ...ngMaterial\n  ],\n  declarations: [\n    ...components\n  ],\n  exports: [\n    ...components\n  ]\n})\nexport class ComponentsModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n  host: {\n    '[class.dialog]': 'true'\n  }\n})\nexport class DialogComponent {\n\n}","import { Output, Component, OnInit, HostListener, Input, EventEmitter } from '@angular/core';\nimport { range, chunk, includes, difference } from 'lodash';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { faEye, faShoppingBag } from '@fortawesome/free-solid-svg-icons';\nimport { getRandomInt, shuffle } from 'src/app/utilties';\nimport { LandTile, LandCardValues } from 'src/app/interfaces';\n\ntype LandGrid = Array<LandTile[]>;\n\nconst MAX_HARVEST = 49;\nconst KEY_CODE = {\n  e: 69,\n  g: 71\n}\n\n@Component({\n  selector: 'app-harvest',\n  templateUrl: './harvest.component.html',\n  styleUrls: ['./harvest.component.scss'],\n  host: {\n    '[class.harvest]': 'true'\n  }\n})\nexport class HarvestComponent implements OnInit {\n  landGrid: LandGrid = [];\n  landSelectSheet;\n  selectedResourceStatus;\n\n  // ICONS\n  exploreIcon = faEye;\n  gatherIcon = faShoppingBag;\n  \n  private destroy$ = new Subject<boolean>();\n  private landTiles: Array<LandTile> = [];\n  private selectedCardCoords: [number, number] | undefined;\n\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    const [r, i] = this.selectedCardCoords;\n    if(event.keyCode === KEY_CODE.e){\n      this.explore();\n    } else if (event.keyCode === KEY_CODE.g) {\n      this.gather(); \n    }\n  }\n\n  @Output() gatherResource: EventEmitter<{ value: number }> = new EventEmitter();\n\n  @Input() player: string;\n\n  @Input() division: string;\n\n  constructor(\n    private _bottomSheet: MatBottomSheet\n    ) {\n    this.landGrid = shuffle(this.landGrid);\n  }\n\n  ngOnInit() {\n    const slots = range(MAX_HARVEST);\n    this.landTiles = slots.map(() => ({ \n      value: getRandomInt(1, 3), \n      owner: this.getOwner(), \n      side: 'back', \n      contaminated: false,\n      mark: null\n     }))\n     this.newHarvest();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n\n  getResourceStatus() {\n    const card = this.getSelectedCard();\n    if (!card) {\n      return\n    }\n    if (card.side === 'back') {\n      return {\n        status: 'explorable'\n      }\n    } else if (card.value == 0) {\n      return {\n        status: 'contaminated',\n        message: 'This land is contaminated'\n      }\n    } else if (card.owner) {\n      const ownedBy = card.owner.division == card.owner.name\n        ? 'a member of the ' + card.owner.division + ' division'\n        : 'player ' + card.owner.name\n      return {\n        status: 'owned',\n        message: 'This land is owned by ' + ownedBy\n      }\n    }\n    return {\n      status: 'explored',\n    }\n  }\n\n  getSelectedCard() {\n    if (this.selectedCardCoords) {\n      const [r, i] = this.selectedCardCoords;\n      return this.landGrid[r][i];\n    }\n    return null;\n  }\n\n  newHarvest() {\n    this.landGrid = this.generateHarvest(13, 2);\n    setTimeout(() => {\n      this.gatherOwnedLand();\n    }, 500)\n  }\n\n  getOwner() {\n    const owned = getRandomInt(0,3) == 0;\n    const div = getRandomInt(0,1) == 0 ? 'NE' : 'W';\n\n    return owned ? {\n      name: div,\n      division: div\n    } : null\n  }\n\n  resetLandTiles() {\n    this.landTiles = <LandTile[]>[ \n      ...this.landTiles.map((tile: LandTile) => ({\n        ...tile,\n        side: 'back',\n        value: getRandomInt(1, 3), \n        contaminated: false,\n        mark: null\n    }))]\n  }\n\n  generateHarvest(totalCards, totalContaminents): LandGrid {\n    // Start with a range of integers\n    const slots = range(MAX_HARVEST);\n    this.resetLandTiles();\n\n    // Generate indexes for removing tiles\n    const removals = this.pluck(slots, MAX_HARVEST - totalCards)\n    removals.forEach((i) => {\n      this.landTiles[i].value = LandCardValues.EMPTY;\n    })\n\n    // Generate harvest (selectable card tiles)\n    const harvest = difference(slots, removals);\n\n    // Add contaminants\n    const contaminents = this.pluck(harvest, totalContaminents);\n    contaminents.forEach((i) => {\n      this.landTiles[i].value = LandCardValues.CONTAM;\n    })\n\n    // Build matrix (2D array)\n    return chunk(this.landTiles, 7);\n  }\n\n  gatherOwnedLand() {\n    this.landGrid.forEach(((row, r) => {\n      row.forEach((card, i) => {\n        if (card.owner) {\n          card.side = 'front';\n          this.process(r, i);\n        }\n      })\n    }))\n  }\n\n  pluck(array, remove) {\n    const toRemove = [];\n    while(toRemove.length < remove) {\n      const value = array[getRandomInt(0, array.length - 1)];\n      if (!includes(toRemove, value)) {\n        toRemove.push(value)\n      }\n    }\n    return toRemove;\n  }\n\n  selectTile(r, i, sheetTemplate) {\n    this.mark(r, i);\n    this.landSelectSheet = this._bottomSheet.open(sheetTemplate);\n    this.selectedResourceStatus = this.getResourceStatus();\n    this.landSelectSheet.afterDismissed().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => {\n      if (this.selectedCardCoords) {\n        this.clearSelection();\n      }\n    })\n  }\n\n  clearSelection() {\n    const [r, i] = this.selectedCardCoords;\n    this.landGrid[r][i].mark = null;\n    this.selectedCardCoords = null;\n  }\n\n  mark(r, i) {\n    if (this.selectedCardCoords) {\n      this.clearSelection();\n    }\n    const card = this.landGrid[r][i];\n    card.mark = card.mark ? null : 1;\n    this.selectedCardCoords = [r,i];\n  }\n\n  explore() {\n    if (this.selectedCardCoords) {\n      const [r, i] = this.selectedCardCoords;\n      const card = this.landGrid[r][i];\n      if (card.side === 'back' && card.value !== -1) {\n        this.landGrid[r][i].side = 'front';\n      }\n      if (this.landSelectSheet) {\n        this.landSelectSheet.dismiss();\n      }\n      this.clearSelection();\n    }\n  }\n\n  gather() {\n    if (this.selectedCardCoords && this.selectedResourceStatus) {\n      const status = this.selectedResourceStatus.status;\n      if (status === 'explorable' || status === 'explored') {\n        console.log('do gather')\n        const [r, i] = this.selectedCardCoords;\n        const card = this.landGrid[r][i];\n        this.gatherResource.emit({ value: card.value });\n        this.landGrid[r][i].value = -1;\n      }\n      if (this.landSelectSheet) {\n        this.landSelectSheet.dismiss();\n      }\n      this.clearSelection();\n    }\n  }\n\n  process(r, i) {\n    // A card value of 0 signifies a contaminant\n    if (this.landGrid[r][i].value === LandCardValues.CONTAM) {\n      const left = this.landGrid[r]?.[i - 1];\n      const right = this.landGrid[r]?.[i + 1];\n      const top = this.landGrid[r - 1]?.[i];\n      const bottom = this.landGrid[r + 1]?.[i];\n\n      setTimeout(() => {\n        if (left && !left.owner) { left.contaminated = true }\n        if (right && !right.owner) { right.contaminated = true }\n        if (top && !top.owner) { top.contaminated = true }\n        if (bottom && !bottom.owner) { bottom.contaminated = true }\n      })\n    }\n  }\n}\n","<div class=\"harvest-cards\">\n  <div *ngFor=\"let row of landGrid; let r = index\" class=\"card-row\">\n    <div \n      *ngFor=\"let card of row; let i = index\"\n      class=\"land-tile\"\n      [class.contaminated]=\"card.contaminated == true\"\n      [attr.data-badge]=\"card.owner ? card.owner.name : null\"\n      [attr.data-division]=\"card.owner ? card.owner.division : null\"\n      [class.empty]=\"card.value === -1\"\n      [class.owned]=\"card.owner !== null\"\n    >\n      <card\n        (click)=\"selectTile(r, i, tileSelectSheet)\"\n        [(side)]=\"card.side\"\n        width=\"40\"\n        height=\"40\"\n        [class.owned]=\"true\"\n        [mark]=\"card.mark\"\n        [class.disabled]=\"card.value == -1 || card.contaminated == true\"\n        (sideChange)=\"process(r, i)\">\n\n        <div front class=\"harvest-card\">\n          <div \n            *ngIf=\"card.value > 0\"\n            class=\"resource\" \n            [class.one]=\"card.value === 1\"\n            [class.two]=\"card.value === 2\"\n            [class.three]=\"card.value === 3\">\n            {{card.value}}\n          </div>\n          <div *ngIf=\"card.value === 0\" class=\"contamination\">\n            <img src=\"../assets/contamination.png\"/>\n          </div>\n        </div>\n        <div back class=\"harvest-card back\"></div>\n      </card>\n    </div>\n  </div>\n</div>\n<button (click)=\"newHarvest()\">New</button>\n\n<ng-template #tileSelectSheet>\n  <div class=\"action-sheet\">\n    {{ selectedResourceStatus?.message }}\n    <div \n      *ngIf=\"selectedResourceStatus?.status === 'explorable'\" \n      class=\"large-action-button\"\n      (click)=\"explore()\">\n      <fa-icon size=\"lg\" [icon]=\"exploreIcon\"></fa-icon>\n      Explore (e)\n    </div>\n    <div \n      *ngIf=\"selectedResourceStatus?.status === 'explored' || selectedResourceStatus?.status === 'explorable'\"\n      class=\"large-action-button\"\n      (click)=\"gather()\">\n      <fa-icon size=\"lg\" [icon]=\"gatherIcon\"></fa-icon>\n      Gather (g)\n    </div>\n  </div>\n</ng-template>","import { Output, Component, OnInit, Input, EventEmitter } from '@angular/core';\nimport { range, chunk, isEqual, isEmpty } from 'lodash';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Subject } from 'rxjs';\nimport { LandCardValues, LandTile } from 'src/app/interfaces';\n\nconst MAX_HARVEST = 49;\nconst HARVEST_ROW_LENGTH = 7;\n\n@Component({\n  selector: 'app-land-grid',\n  templateUrl: './land-grid.component.html',\n  styleUrls: ['./land-grid.component.scss'],\n  host: {\n    '[class.harvest]': 'true'\n  }\n})\nexport class LandGridComponent implements OnInit {\n  landTiles;\n  animateTiles;\n\n  landSelectSheet;\n  selectedResourceStatus;\n  selectedCardIndex;\n  \n  private destroy$ = new Subject<boolean>();\n\n  @Output() gatherResource: EventEmitter<{ value: number }> = new EventEmitter();\n  @Output() select: EventEmitter<LandTile> = new EventEmitter();\n\n  @Input() markCards: boolean;\n  @Input() updatePath;\n  @Input() showId;\n  @Input() playerId = 0;\n\n  constructor(\n    private db: AngularFireDatabase,\n    private _bottomSheet: MatBottomSheet\n  ) {}\n\n  ngOnInit() {\n    this.db.object(this.updatePath)\n      .valueChanges()\n      .subscribe((tiles: any[]) => {\n        if (!this.landTiles) {\n          this.landTiles = tiles;\n        }\n        tiles.forEach((update, i) => {\n          if (!isEqual(update, this.landTiles[i])) {\n            console.log('update: ', update)\n            const tile = this.landTiles[i];\n            tile.harvested = update.harvested;\n            tile.value = update.value;\n            tile.contaminated = update.contaminated;\n            tile.mark = update.mark ?? null;\n            tile.owner = update.owner ?? null;\n          }\n        })\n      })\n\n    this.db.object(`shows/${this.showId}/contamination/current`)\n      .valueChanges()\n      .subscribe((level) => {\n        console.log('adjust contam: ', level)\n        //this.adjustContamination(level);\n      })\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n  }\n\n  cardUpdates(tiles) {\n    tiles.forEach((tile, i) => {\n      if (isEqual(tile, this.landTiles[i])) {\n        this.landTiles[i] = { ...tile };\n      }\n    })\n  }\n\n  getSelectedCard() {\n    return this.landTiles?.[this.selectedCardIndex] ?? null;\n  }\n\n  gatherOwnedLand() {\n    this.landTiles.forEach((card, i) => {\n      if (card.owner) {\n        card.harvested = false;\n        this.process(i);\n      }\n    })\n  }\n\n  selectTile(card) {\n    console.log('select: ', card, isEmpty(card.mark))\n    if (!card.mark || card.mark === this.playerId) {\n      this.select.emit(card);\n      this.mark(card);\n    }\n  }\n\n  clearSelection(index) {\n    this.landTiles[index].mark = null;\n    this.selectedCardIndex = null;\n    this.updateDB();\n  }\n\n  mark(_card) {\n    if (this.selectedCardIndex) {\n      this.clearSelection(this.selectedCardIndex);\n    }\n    const card = this.landTiles[_card.index];\n    card.mark = card.mark ? null : this.playerId;\n    this.selectedCardIndex = card.index;\n    this.updateDB();\n  }\n\n  explore(card) {\n    console.log('explore: ', card);\n    if (!card.harvested && card.value !== LandCardValues.EMPTY) {\n      this.landTiles[card.index].harvested = true;\n      console.log('updates: ', this.landTiles);\n      this.updateDB();\n    }\n    this.clearSelection(card.index);\n  }\n\n  gather(card) {\n    console.log('do gather')\n    this.gatherResource.emit({ value: card.value });\n    this.landTiles[card.index].value = -1;\n    this.updateDB();\n    this.clearSelection(card.index);\n  }\n\n  updateDB() {\n    this.db.object(this.updatePath).update(this.landTiles);\n  }\n\n  getRelativeGridIndex(index, dir, dist) {\n    const grid = chunk(range(MAX_HARVEST), HARVEST_ROW_LENGTH);\n    const r = Math.floor(index / HARVEST_ROW_LENGTH);\n    const c = index % HARVEST_ROW_LENGTH;\n    \n    if (dir === 'left') { return grid[r]?.[c - dist] }\n    if (dir === 'right') { return grid[r]?.[c + dist] }\n    if (dir === 'top') { return grid[r - dist]?.[c] }\n    if (dir === 'bottom') { return grid[r + dist]?.[c] }\n  }\n\n  process(i) {\n    const tile = this.landTiles[i];\n    if (tile.value === LandCardValues.CONTAM && tile.harvested) {\n      const left = this.landTiles[this.getRelativeGridIndex(i, 'left', 1)];\n      const right = this.landTiles[this.getRelativeGridIndex(i, 'right', 1)];\n      const top = this.landTiles[this.getRelativeGridIndex(i, 'top', 1)];\n      const bottom = this.landTiles[this.getRelativeGridIndex(i, 'bottom', 1)];\n\n      setTimeout(() => {\n        if (left && !left.owner) { left.contaminated = true }\n        if (right && !right.owner) { right.contaminated = true }\n        if (top && !top.owner) { top.contaminated = true }\n        if (bottom && !bottom.owner) { bottom.contaminated = true }\n        this.updateDB();\n      })\n    }\n  }\n}\n","<div class=\"harvest-cards\">\n  <div \n    *ngFor=\"let card of landTiles; let i = index\"\n    class=\"land-tile\"\n    [class.contaminated]=\"card.contaminated == true\"\n    [attr.data-badge]=\"card.owner ? card.owner.name : null\"\n    [attr.data-division]=\"card.owner ? card.owner.division : null\"\n    [class.empty]=\"card.value === -1\"\n    [class.owned]=\"card.owner !== null\"\n  >\n    <card\n      (click)=\"selectTile(card)\"\n      [side]=\"card.harvested ? 'front' : 'back'\"\n      width=\"40\"\n      height=\"40\"\n      [class.owned]=\"true\"\n      [mark]=\"card.mark\"\n      [playerId]=\"playerId\"\n      [class.disabled]=\"card.value == -1 || card.contaminated == true\"\n      (sideChange)=\"process(i)\">\n      <div front class=\"harvest-card\">\n        <div \n          *ngIf=\"card.value > 0\"\n          class=\"resource\" \n          [class.one]=\"card.value === 1\"\n          [class.two]=\"card.value === 2\"\n          [class.three]=\"card.value === 3\">\n          {{card.value}}\n        </div>\n        <div *ngIf=\"card.value === 0\" class=\"contamination\">\n          <img src=\"../assets/contamination.png\"/>\n        </div>\n      </div>\n      <div back class=\"harvest-card back\">\n        <div class=\"flex-row flex-center\" *ngIf=\"markCards\">\n          {{card.value == 0 ? 'X' : ''}}\n        </div>\n      </div>\n    </card>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { slice } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { LandCardValues } from 'src/app/interfaces';\n\n@Component({\n  selector: 'app-player-deck',\n  templateUrl: './player-deck.component.html',\n  styleUrls: ['./player-deck.component.scss'],\n  host: {\n    '[class.player-deck]': 'true'\n  }\n})\nexport class PlayerDeckComponent {\n  $GLAResources: Observable<any>;\n\n  private _resources = [\n    { value: 1 }, { value: 3 }, { value: 2 },\n    { value: 1 }, { value: 3 }, { value: 2 },\n    { value: 1 }, { value: 3 }, { value: 2 },\n  ];\n  private _achievements: {\n    safety: [],\n    health: [],\n    arts: [],\n    knowledge: [],\n    infastructure: []\n  }\n  wealth = 0;\n\n  @Input() id;\n  @Input() division;\n\n  ngOnInit() {\n    // this.resources = sortBy(this.resources, 'value');\n    this.calculateWealth()\n  }\n\n  get resources() { return this._resources }\n  set resources(value) {\n    this._resources = value;\n  }\n\n  public add(R) {\n    if (R.value === LandCardValues.CONTAM) {\n      this.contaminateResources()\n    } else {\n      this._resources.push(R);\n      this.wealth += R.value;\n      // this.resources = sortBy(this.resources, 'value')\n    }\n  }\n\n  public remove(id) {\n    console.log('remove resource: ', id)\n  }\n\n  public spend(cost) {\n    if (cost > this.wealth) {\n      window.alert(\"Sorry, you can't afford that :(\")\n    } else {\n      const change = this.spendResources(cost)\n    }\n  }\n\n  private spendResources(cost) {\n    let spend = 0;\n    let transactions = 0;\n    const maxTransactions = this.resources.length;\n\n    while (spend < cost && transactions <= maxTransactions) {\n      spend += this.resources[0].value;\n      this.resources.shift();\n      transactions++;\n    }\n\n    if (cost > spend) {\n      alert('TRANSACTION DECLINED')\n    } else {\n      const change = spend - cost;\n\n      if (change > 0) {\n        this.resources.push({ value: change });\n      }\n  \n      this.calculateWealth();\n  \n      console.log('SPENT: ', spend, 'CHANGE: ', change)\n    }\n  }\n\n  private calculateWealth() {\n    this.wealth = this.resources.reduce((acc, R) => acc + R.value, 0);\n  }\n\n  private contaminateResources() {\n    const toDestroy = Math.ceil(this.resources.length / 2);\n    const destroyMsg = toDestroy > 0 \n      ? ` ${formatPlural(toDestroy, 'resource has', 'resources have')} been destroyed`\n      : ''\n\n    this.resources = slice(this.resources, toDestroy)\n    this.calculateWealth();\n\n    window.alert(`You gathered a contaminant!${destroyMsg}`);\n  }\n}\n\nfunction formatPlural(num, singular, plural) {\n  return num == 1 ? `${num} ${singular}` : `${num} ${plural}`;\n}","PLAYER: {{id}} | WEALTH: {{wealth}}\n<div class=\"flex-row\">\n  <div class=\"flex-column\">\n    Harvested\n    <div class=\"player-hand\">\n      <div \n        class=\"resource\" \n        [class.one]=\"resource.value == 1\"\n        [class.two]=\"resource.value == 2\"\n        [class.three]=\"resource.value == 3\"\n        *ngFor=\"let resource of resources\">\n        {{resource.value}}\n      </div>\n    </div>\n  </div>\n  <div class=\"flex-column\">\n    GLA\n    <div class=\"gla-resources\">\n      <div \n        class=\"resource\" \n        [class.one]=\"resource.value == 1\"\n        [class.two]=\"resource.value == 2\"\n        [class.three]=\"resource.value == 3\"\n        *ngFor=\"let resource of ($GLAResources | async)\">\n        {{resource.value}}\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-player-hands',\n  templateUrl: './player-hands.component.html',\n  styleUrls: ['./player-hands.component.scss'],\n  host: {\n    '[class.player-hands]': 'true'\n  }\n})\nexport class PlayerHandsComponent {\n  private _hand = [];\n  private _score: number = 0;\n\n  @Input() players;\n  @Input() focus;\n\n  get hand() { return this._hand }\n  set hand(value) {\n    this._hand = value;\n  }\n\n  public add(card) {\n    this._hand.push(card);\n    console.log(\"add card: \", card, this.hand);\n  }\n\n  public remove(id) {\n    console.log('remove card: ', id)\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-scorecard',\n  templateUrl: './scorecard.component.html',\n  styleUrls: ['./scorecard.component.scss'],\n  host: {\n    '[class.scorecard]': 'true'\n  }\n})\nexport class ScorecardComponent {\n\n}","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-society-summary',\n  templateUrl: './society-summary.component.html',\n  styleUrls: ['./society-summary.component.scss'],\n  host: {\n    '[class.society-summary]': 'true',\n    '[class.flex-column]': 'true'\n  }\n})\nexport class SocietySummaryComponent {\n  @Input() division;\n  @Input() details: 'full' | 'brief';\n\n  calculateReserve(reserve) {\n    return reserve.reduce((acc, R) => acc + R, 0)\n  }\n}","<ng-container *ngIf=\"division\">\n  <strong>Division: {{ division?.code }}</strong>\n  <div><strong>Season:</strong>{{ division.season }}</div>\n  <div><strong>Score:</strong>{{ division.score }}</div>\n  <div><strong>Land cost:</strong>{{ division.landCost }}</div>\n  <ng-container *ngIf=\"details === 'full'\">\n    <div><strong>Reserve:</strong>{{ calculateReserve(division.reserve) }}</div>\n    <div><strong>Harvested (actual):</strong>{{ division.harvested }}</div>\n    <div><strong>Capacity:</strong>{{ division.capacity }}+{{ division.extra }}</div>\n    <div><strong>Harvest:</strong>{{ division.harvest }}</div>\n  </ng-container>\n</ng-container>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-vote',\n  templateUrl: './vote.component.html',\n  styleUrls: ['./vote.component.scss'],\n  host: {\n    '[class.vote]': 'true'\n  }\n})\nexport class VoteComponent {\n\n}","export interface LandTile {\n  value: number;\n  owner: LandOwner, \n  side?: 'back' | 'front';\n  harvested?: boolean;\n  contaminated: boolean;\n  mark: string | number | null;\n}\n\nexport interface LandOwner {\n  name: string;\n  division: string;\n}\n\nexport enum LandCardValues {\n  EMPTY = -1,\n  CONTAM = 0,\n  V1 = 1,\n  V2 = 2,\n  V3 = 3\n}\n\nexport type LandCardValue = LandCardValues | keyof typeof LandCardValues;\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { take } from 'rxjs/operators';\nimport { toArray, range } from 'lodash';\nimport { DIVISION_TEMPLATE, SHOW_TEMPLATE } from './templates';\n\nconst DIVISIONS = ['N', 'S', 'E', 'W', 'NE', 'SE', 'SW', 'NW']\nconst MAX_HARVEST = 49;\n\n@Component({\n  selector: 'app-central',\n  templateUrl: './central.component.html',\n  styleUrls: ['./central.component.scss']\n})\nexport class CentralComponent implements OnInit {\n  showKey: string;\n  divisionChanges;\n\n  constructor(private db: AngularFireDatabase) {}\n\n  ngOnInit() {\n    this.db.list('shows', ref => ref.limitToLast(1))\n      .snapshotChanges()\n      .pipe(take(1))\n      .subscribe(([snapshot]) => {\n        this.showKey = snapshot.key\n        this.createDivisionListeners(snapshot.payload.val())\n      })\n  }\n\n  createDivisionListeners(show) {\n    if (show?.divisions) {\n      this.divisionChanges = toArray(show.divisions).map(division => {\n        return this.db.object(`shows/${this.showKey}/divisions/${division.code}`).valueChanges();\n      })\n    }\n  }\n\n  newShow() {\n    const divisions = this.generateDivisions();\n    this.db.list('shows').push({ divisions, ...SHOW_TEMPLATE })\n      .then((res) => { this.buildShow(res.key) })\n  }\n\n  buildShow(key) {\n    this.db.object(`shows/${key}`).valueChanges()\n      .pipe(take(1))\n      .subscribe((show) => {\n        this.showKey = key;\n        this.createDivisionListeners(show);\n      })\n  }\n\n  generateDivisions() {\n    return DIVISIONS.reduce((acc, abv) => {\n      return { ...acc, [abv]: { \n        code: abv, \n        landTiles: this.generateLandTiles(),\n        ...DIVISION_TEMPLATE\n      } }\n    }, {});\n  }\n\n  generateLandTiles() {\n    const slots = range(MAX_HARVEST);\n    return slots.map((_, index) => ({ \n      value: -1, \n      owner: null, \n      harvested: false, \n      contaminated: false,\n      mark: null, \n      index\n     }))\n  }\n}\n","<button (click)=\"newShow()\">New Show</button>\n<div class=\"division-summary\" *ngFor=\"let $division of divisionChanges\">\n  localhost:4200/{{showKey}}/{{ ($division | async)?.code }}/X\n  <app-society-summary\n    details=\"full\"\n    [division]=\"$division | async\">\n  </app-society-summary>\n</div>","export const DIVISION_TEMPLATE = {\n  achievements: {\n    safety: {\n     accomplishedBy: null,\n     reward: 'Exploring a contamination will not affect the harvest line.'\n    },\n    health: {\n      accomplishedBy: null,\n      reward: 'Gathering a contamination will not affect your hand.'\n    },\n    arts: {\n      accomplishedBy: null,\n      reward: 'The effect is immeasurable.'\n    },\n    knowledge: {\n      accomplishedBy: null,\n      reward: 'Peek at one resource on the harvest line without exploring.'\n    },\n    infastructure: {\n      accomplishedBy: null,\n      reward: '+1 action.'\n    }\n  },\n  imports: {\n    messages: [],\n    gla: [],\n    resources: [],\n    players: []\n  },\n  exports: {\n    messages: [],\n    gla: [],\n    resources: [],\n    players: []\n  },\n  landCost: 5,\n  VP: 0,\n  score: 'Low',\n  principles: [],\n  resolutions: [],\n  season: 1,\n  messages: [],\n  incomingAnnouncement: null,\n  announcements: [],\n  reserve: [1, 2, 3, 2],\n  reserveThresholds: {\n    low: 7, \n    mid: 12,\n    hight: 17\n  },\n  capacity: 18,\n  extra: 8,\n  harvest: 25,\n  harvested: 20,\n  land: [],\n  citizens: []\n}\n\nexport const SHOW_TEMPLATE = {\n  clock: 0,\n  live: false,\n  contamination: {\n    min: 5,\n    max: 100,\n    current: 5,\n    formula: 'linear'\n  },\n  newsFeed: [],\n  content: {},\n  gla: {\n    actual: 0,\n    capacity: 0\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { getRandomInt, pluckRandom } from 'src/app/utilties';\nimport { LandTile, LandCardValues } from 'src/app/interfaces';\nimport { includes, range, difference } from 'lodash';\n\n@Component({\n  selector: 'app-host',\n  templateUrl: './host.component.html',\n  styleUrls: ['./host.component.scss']\n})\nexport class HostComponent implements OnInit {\n  division;\n  contamination;\n  harvest;\n\n  divisionId;\n  showId;\n  divisionPath;\n  landTilesPath;\n\n  constructor(\n    private db: AngularFireDatabase,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.divisionId = this.route.snapshot.params.division;\n    this.showId = this.route.snapshot.params.show;\n    this.divisionPath = `shows/${this.showId}/divisions/${this.divisionId}`;\n    \n    this.landTilesPath = `${this.divisionPath}/landTiles`\n\n    this.db.object(this.divisionPath)\n      .valueChanges()\n      .subscribe((division) => {\n        this.division = division\n      })\n\n    this.db.object(`shows/${this.showId}/contamination/current`)\n      .valueChanges()\n      .subscribe((level) => {\n        this.adjustContamination(level);\n      })\n  }\n\n  newSeason() {\n    const { landTiles, harvest } = this.division;\n    this.harvest = this.generateHarvest(landTiles, harvest);\n    this.db.object(`${this.divisionPath}/landTiles`).set({ ...this.harvest })\n    console.log('NEW HARVEST: ', this.harvest)\n  }\n\n  private adjustContamination(level) {\n    console.log('adjust contam')\n    this.contamination = level;\n    if (this.harvest) {\n      const cardIndexes = this.harvest\n        .map((tile, index) => tile.value == LandCardValues.EMPTY ? -1 : index)\n        .filter(value => value !== -1);\n      const contaminantsCount = Math.ceil((this.contamination / 100) * cardIndexes.length)\n      const currentContaminantIndexes = this.harvest\n        .map((tile, index) => tile.value === LandCardValues.CONTAM ? index : -1)\n        .filter(value => value !== -1);\n      const adjustment = contaminantsCount - currentContaminantIndexes.length;\n\n      console.log({cardIndexes, contaminantsCount, current: currentContaminantIndexes.length, adjustment })\n      if (adjustment > 0) {\n        const contaminate = pluckRandom(\n          difference(cardIndexes, currentContaminantIndexes),\n          Math.min(adjustment, cardIndexes.length)\n        );\n        console.log('add contams: ', contaminate)\n        contaminate.forEach((i) => {\n          if (!this.harvest[i].harvested) {\n            this.harvest[i].value = LandCardValues.CONTAM;\n          }\n        })\n      } else if (adjustment < 0) {\n        const uncontaminate = pluckRandom(currentContaminantIndexes, Math.min(Math.abs(adjustment), currentContaminantIndexes.length));\n        console.log('Remove contams: ', uncontaminate)\n        uncontaminate.forEach((i) => {\n          if (!this.harvest[i].harvested) {\n            this.harvest[i].value = getRandomInt(1,3);\n          }\n        })\n      }\n    }\n  }\n\n  private generateHarvest(landTiles, harvestableCards): Array<LandTile> {\n    const tiles: LandTile[] = [ ...this.resetLandTiles(landTiles) ];\n    const harvest: number[] = pluckRandom(range(tiles.length), harvestableCards);\n    const contaminantsCount = Math.ceil((this.contamination / 100) * harvestableCards);\n    const contaminants: number[] = pluckRandom(harvest, contaminantsCount);\n\n    harvest.forEach((i) => {\n      tiles[i].value = includes(contaminants, i) ? 0 : getRandomInt(1,3)\n    })\n\n    return tiles;\n  }\n\n  private resetLandTiles(tiles) {\n    return tiles.map((tile) => ({\n      ...tile,\n      value: -1,\n      contaminated: false,\n      mark: null,\n      harvested: false\n    }))\n  }\n}\n","<span *ngIf=\"contamination !== undefined\">\n  Contamination Level: {{contamination}}%\n</span>\n<hr/>\n<app-society-summary\n  *ngIf=\"division\"\n  details=\"full\"\n  [division]=\"division\">\n</app-society-summary>\n<button (click)=\"newSeason()\">New Season</button>\n<app-land-grid \n  [markCards]=\"true\"\n  [showId]=\"showId\"\n  [updatePath]=\"landTilesPath\">\n</app-land-grid>","import { NgModule } from '@angular/core';\nimport { HostComponent } from './host/host.component';\nimport { CentralComponent } from './central/central.component';\nimport { PlayerComponent } from './player/player.component';\nimport { ComponentsModule } from '../components/components.module';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nconst pages = [\n  CentralComponent,\n  HostComponent,\n  PlayerComponent\n]\n\n@NgModule({\n  imports: [\n    ComponentsModule,\n    FontAwesomeModule,\n    CommonModule,\n  ],\n  declarations: [\n    ...pages\n  ],\n  exports: [\n    ...pages\n  ]\n})\nexport class PagesModule { }\n","import { Component, ViewChild, OnInit, TemplateRef, HostListener } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { PlayerDeckComponent } from 'src/app/components/player-deck/player-deck.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { LandGridComponent } from 'src/app/components/land-grid/land-grid.component';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { LandCardValues } from 'src/app/interfaces';\nimport { faEye, faShoppingBag } from '@fortawesome/free-solid-svg-icons';\n\nconst KEY_CODE = {\n  e: 69,\n  g: 71\n}\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.scss']\n})\nexport class PlayerComponent implements OnInit {\n  @ViewChild(PlayerDeckComponent, { static: false }) playerDeck: PlayerDeckComponent;\n  @ViewChild(LandGridComponent, { static: false }) landGrid: LandGridComponent;\n  @ViewChild(TemplateRef, { static: false }) sheetTemplate: TemplateRef<any>;\n  \n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if(event.keyCode === KEY_CODE.e){\n      this.explore();\n    } else if (event.keyCode === KEY_CODE.g) {\n      this.gather(); \n    }\n  }\n\n  private destroy$ = new Subject<boolean>();\n\n  id;\n  division = 'N';\n  divisionData;\n  showId;\n  landTilesPath;\n  selectedResourceStatus;\n  actionSheet;\n  selectedCard;\n\n  // ICONS\n  exploreIcon = faEye;\n  gatherIcon = faShoppingBag;\n  \n  constructor(\n    private db: AngularFireDatabase,\n    private _bottomSheet: MatBottomSheet,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    const { show, division, id } = this.route.snapshot.params;\n    const showPath = `shows/${show}`;\n    this.showId = show;\n    this.id = id;\n    this.landTilesPath = `${showPath}/divisions/${division}/landTiles`\n  }\n\n  onGather(card) {\n    this.playerDeck.add(card);\n  }\n\n  onSelect(card) {\n    this.selectedCard = card;\n    this.actionSheet = this._bottomSheet.open(this.sheetTemplate);\n    this.selectedResourceStatus = this.getResourceStatus(card);\n    this.actionSheet.afterDismissed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        if (this.selectedCard) {\n          this.landGrid.clearSelection(this.selectedCard.index)\n        }\n      })\n  }\n\n  getResourceStatus(card) {\n    if (card === undefined) {\n      return\n    }\n    if (!card.harvested) {\n      return {\n        status: 'explorable'\n      }\n    } else if (card.value == LandCardValues.CONTAM) {\n      return {\n        status: 'contaminated',\n        message: 'This land is contaminated'\n      }\n    } else if (card.owner) {\n      const ownedBy = card.owner.division == card.owner.name\n        ? 'a member of the ' + card.owner.division + ' division'\n        : 'player ' + card.owner.name\n      return {\n        status: 'owned',\n        message: 'This land is owned by ' + ownedBy\n      }\n    }\n    return {\n      status: 'explored',\n    }\n  }\n\n  buy(item) {\n    this.playerDeck.spend(item.cost);\n  }\n\n  explore() {\n    console.log('explore');\n    this.landGrid.explore(this.selectedCard);\n    this.actionSheet.dismiss();\n  }\n\n  gather() {\n    const status = this.selectedResourceStatus?.status;\n    if (status === 'explorable' || status === 'explored') {\n      this.landGrid.gather(this.selectedCard)\n    }\n    this.actionSheet.dismiss();\n  }\n}\n","DIVISION: {{division}}\n\n<app-land-grid \n  #landGrid\n  [markCards]=\"false\"\n  [updatePath]=\"landTilesPath\"\n  [showId]=\"showId\"\n  [playerId]=\"id\"\n  (gatherResource)=\"onGather($event)\"\n  (select)=\"onSelect($event)\"\n>\n</app-land-grid>\n\n<app-player-deck [id]=\"id\" [division]=\"division\"></app-player-deck>\n\n<button (click)=\"buy({ cost: 2 })\">Spend $2</button>\n<button (click)=\"buy({ cost: 5 })\">Spend $5</button>\n<button (click)=\"buy({ cost: 6 })\">Spend $6</button>\n\n<ng-template #tileSelectSheet>\n  <div class=\"action-sheet\">\n    {{ selectedResourceStatus?.message }}\n    <div \n      *ngIf=\"selectedResourceStatus?.status === 'explorable'\" \n      class=\"large-action-button\"\n      (click)=\"explore()\">\n      <fa-icon size=\"lg\" [icon]=\"exploreIcon\"></fa-icon>\n      Explore (e)\n    </div>\n    <div \n      *ngIf=\"selectedResourceStatus?.status === 'explored' || selectedResourceStatus?.status === 'explorable'\"\n      class=\"large-action-button\"\n      (click)=\"gather()\">\n      <fa-icon size=\"lg\" [icon]=\"gatherIcon\"></fa-icon>\n      Gather (g)\n    </div>\n  </div>\n</ng-template>","import { includes } from 'lodash';\n\nexport function shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function pluckRandom(array, total) {\n  const plucked = [];\n  if (total > array.length) {\n    console.error('pluck random: \"total\" cannot be greater than length of array to pluck from');\n    return array\n  }\n  while(plucked.length < total) {\n    const value = array[getRandomInt(0, array.length - 1)];\n    if (!includes(plucked, value)) {\n      plucked.push(value)\n    }\n  }\n  return plucked;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyAN_zOphtFT2At-ZHMYYacm-xmTSJvCyoU\",\n    authDomain: \"new-societies-8049d.firebaseapp.com\",\n    projectId: \"new-societies-8049d\",\n    storageBucket: \"new-societies-8049d.appspot.com\",\n    messagingSenderId: \"375668793661\",\n    appId: \"1:375668793661:web:0a818f374766b6e353e554\",\n    measurementId: \"G-2RV4B8YR29\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}